// Breakpoint viewport sizes and media queries.
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//    >> breakpoint-next(md)
//    lg
//    >> breakpoint-next(md, (sm: 0, md: 768px, lg: 1024px, xl: 1440px))
//    lg
//    >> breakpoint-next(md, $breakpoint-names: (sm md lg xl))
//    lg
@function grid-breakpoint-next($name, $breakpoints: $gridBreakpoints, $breakpointNames: map-keys($breakpoints)) {
    $index: index($breakpointNames, $name);
    @return if($index != null and $index < length($breakpointNames), nth($breakpointNames, $index + 1), null);
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//    >> breakpoint-min(md, (sm: 0, md: 768px, lg: 1024px, xl: 1440px))
//    768px
@function grid-breakpoint-min($name, $breakpoints: $gridBreakpoints) {
    $min: map-safe-get($breakpoints, $name);
    @return if($min != 0, $min, null);
}

// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.02px
// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//    >> breakpoint-max(md, (sm: 0, md: 768px, lg: 1024px, xl: 1440px))
//    1023.98px
@function grid-breakpoint-max($name, $breakpoints: $gridBreakpoints) {
    $next: grid-breakpoint-next($name, $breakpoints);
    @return if($next, grid-breakpoint-min($next, $breakpoints) - 0.02, null);
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.
// Useful for making responsive utilities.
//    >> breakpoint-suffix(sm, (sm: 0, md: 768px, lg: 1024px, xl: 1440px))
//    ""  (Returns a blank string)
//    >> breakpoint-suffix(md, (sm: 0, md: 768px, lg: 1024px, xl: 1440px))
//    "-md"
@function grid-breakpoint-suffix($name, $breakpoints: $gridBreakpoints) {
    @return if(grid-breakpoint-min($name, $breakpoints) == null, '', '-#{$name}');
}

@function map-reverse($map) {
    $result: null;

    @if type-of($map) == 'map' {
        $keys: map-keys($map);
        $mapReversed: ();

        @for $item from length($keys) through 1 {
            $mapReversed: map-merge(
                $mapReversed,
                (nth($keys, $item): map-safe-get($map, nth($keys, $item)))
            );
        }

        @if type-of($mapReversed) == 'map' {
            $result: $mapReversed;
        } @else {
            @warn 'There was an error reversing the order of `#{$map}`';
        }
    } @else {
        @warn '`#{$map}` is not a valid map';
    }

    @return $result;
}
