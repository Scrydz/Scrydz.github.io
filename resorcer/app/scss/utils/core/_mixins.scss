// Core mixins
//
// This section describes core mixins used for development in the project.
//
// Weight: 2
//
// Style guide: sass.mixins
//
// Part: mixins

// generate-font-face($map, $path)
//
// Generate @font-face rules
//
// $map = required - {Map}; The map which contains types of fonts.
// $path = '../fonts/' - {String}; Relative path to the fonts root directory.
//
// Weight: 1
//
// Style guide: sass.mixins.generateFontFace
//
// Part: mixins

@mixin generate-font-face($map: '', $path: $globalFontsPath) {
    @if (type-of($map) == 'map') {
        @each $fontName, $fontData in $map {
            @if (type-of($fontData) == 'map') {
                @for $item from 1 through length($fontData) {
                    $fontFileName: nth(map-safe-get($fontData, $item), 1);
                    $fontLocalName--1: nth(map-safe-get($fontData, $item), 2);
                    $fontLocalName--2: nth(map-safe-get($fontData, $item), 3);
                    $fontWeight: nth(map-safe-get($fontData, $item), 4);
                    $fontStyle: nth(map-safe-get($fontData, $item), 5);

                    @font-face {
                        // sass-lint:disable-block no-duplicate-properties
                        font-display: swap;
                        font-family: $fontName;
                        font-style: if($fontStyle, italic, normal);
                        font-weight: $fontWeight;
                        src: url('#{$path}#{$fontFileName}.eot'); // IE 11 fix
                        src: local('#{$fontLocalName--1}'), local('#{$fontLocalName--2}'),
                        url('#{$path}#{$fontFileName}.eot?#iefix') format('embedded-opentype'), // IE 11 fix
                        url('#{$path}#{$fontFileName}.woff2')format('woff2'),
                        url('#{$path}#{$fontFileName}.woff') format('woff');
                    }
                }
            } @else {
                @error '`#{$fontData}` is not a valid map';
            }
        }
    } @else {
        @error 'Param: `#{$map}` is not a valid map';
    }
}

// when-inside($context)
//
// Helps make context selector a little more friendly
//
// $context = required - {String|List}; parent selector or list of parent selectors
// @content = required - styles should be added
//
// Weight: 2
//
// Style guide: sass.mixins.whenInside
//
// Part: mixins

@mixin when-inside($context) {
    #{$context} & {
        @content;
    }
}

// placeholder($color)
//
// Setting up 'color' property for input placeholder for different browsers
//
// $color = #fff - {Color}; should be a color value.
// @content = optional - additional styles can be added
//
// Weight: 5
//
// Style guide: sass.mixins.placeholder
//
// Part: mixins

@mixin placeholder($color: $globalColorWhite) {
    &::-webkit-input-placeholder {
        color: $color;
        @content;
    }

    &:-moz-placeholder {
        opacity: 1;
        color: $color;
        @content;
    }

    &::-moz-placeholder {
        opacity: 1;
        color: $color;
        @content;
    }

    &:-ms-input-placeholder {
        color: $color;
        @content;
    }
}

// text-truncate()
//
// Truncate text overflow
//
// Weight: 6
//
// Style guide: sass.mixins.textTruncate
//
// Part: mixins

@mixin text-truncate() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
